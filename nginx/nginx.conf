user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

	  # 백엔드 upstream 설정
    upstream user-event-api.local {
        server user-event-api:3001;
    }

    server {
        listen 80;
        server_name {internal-alb}

        location / {
          add_header Content-Type text/plain;
          return 200 'OK';
        }

		    # /api 경로로 오는 요청을 백엔드 upstream 의 /api 경로로 포워딩
        location ~ ^/v1 {
            proxy_set_header Host $host;
            proxy_pass_header Set-Cookie;
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_max_temp_file_size 0;
            proxy_redirect off;
            proxy_buffering off;
            proxy_buffer_size 512k;
            proxy_buffers 8 256k;
            proxy_busy_buffers_size 512k;

            proxy_pass http://host.docker.internal:3001;
        }
    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    server_names_hash_bucket_size 512;
    include /etc/nginx/conf.d/*.conf;
}
